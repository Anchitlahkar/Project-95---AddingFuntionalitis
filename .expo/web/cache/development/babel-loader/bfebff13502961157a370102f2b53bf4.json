{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\health-app\\\\health-app\\\\screens\\\\SettingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport MyHeader from \"../components/Header\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { Input } from \"react-native-elements\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\n\nvar SettingScreen = function (_React$Component) {\n  _inherits(SettingScreen, _React$Component);\n\n  var _super = _createSuper(SettingScreen);\n\n  function SettingScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingScreen);\n\n    _this = _super.call(this);\n\n    _this.getUserData = function () {\n      var user = firebase.auth().currentUser;\n      var email = user.email;\n      db.collection(\"Users\").where(\"email\", \"==\", email).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var data = doc.data();\n          var name = data.name;\n          var fullName = name.split(\" \");\n          console.log(fullName);\n\n          _this.setState({\n            emailId: data.email,\n            firstName: fullName[0],\n            LastName: fullName[1],\n            address: data.address,\n            contact: data.contact,\n            docId: doc.id\n          });\n        });\n      });\n    };\n\n    _this.updateUserData = function () {\n      db.collection(\"Users\").doc(_this.state.docId).update({\n        name: _this.state.firstName + \" \" + _this.state.LastName,\n        contact: _this.state.contact,\n        address: _this.state.address\n      });\n      alert('User Details Updated SuccessFully');\n    };\n\n    _this.state = {\n      firstName: \"\",\n      LastName: \"\",\n      contact: \"\",\n      address: \"\",\n      emailId: \"\",\n      docId: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"componentDidMount\");\n      this.getUserData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Settings\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }), React.createElement(KeyboardAvoidingView, {\n        style: styles.KeyboardAvoidingView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: \"center\",\n          fontSize: 20,\n          fontWeight: \"bold\",\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, \"User Info\"), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"First Name\",\n        label: \"First Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            firstName: text\n          });\n        },\n        value: this.state.firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Last Name\",\n        label: \"Last Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            LastName: text\n          });\n        },\n        value: this.state.LastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Contact\",\n        label: \"Contact\",\n        maxLength: 10,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            contact: text\n          });\n        },\n        value: this.state.contact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Address\",\n        label: \"Address\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            address: text\n          });\n        },\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this2.updateUserData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return SettingScreen;\n}(React.Component);\n\nexport { SettingScreen as default };\nvar styles = StyleSheet.create({\n  formTextInput: {\n    width: \"75%\",\n    height: RFValue(35),\n    alignSelf: \"center\",\n    borderColor: \"#ffab91\",\n    borderRadius: 10,\n    borderWidth: 4.5,\n    marginTop: RFValue(20),\n    padding: RFValue(10)\n  },\n  button: {\n    width: \"50%\",\n    height: RFValue(50),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    marginTop: RFValue(20),\n    marginLeft: \"25%\"\n  },\n  buttonText: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["D:/Apps/health-app/health-app/screens/SettingScreen.js"],"names":["React","MyHeader","db","firebase","Input","RFValue","SettingScreen","getUserData","user","auth","currentUser","email","collection","where","get","then","snapshot","forEach","doc","data","name","fullName","split","console","log","setState","emailId","firstName","LastName","address","contact","docId","id","updateUserData","state","update","alert","props","navigation","styles","KeyboardAvoidingView","alignSelf","fontSize","fontWeight","marginTop","formTextInput","text","button","buttonText","Component","StyleSheet","create","width","height","borderColor","borderRadius","borderWidth","padding","justifyContent","alignItems","backgroundColor","marginLeft","color"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport MyHeader from \"../components/Header\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { Input } from \"react-native-elements\";\r\nimport {RFValue} from \"react-native-responsive-fontsize\"\r\n\r\n\r\nexport default class SettingScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      firstName: \"\",\r\n      LastName: \"\",\r\n      contact: \"\",\r\n      address: \"\",\r\n      emailId: \"\",\r\n      docId: \"\",\r\n    };\r\n  }\r\n\r\n  getUserData = () => {\r\n    var user = firebase.auth().currentUser;\r\n    var email = user.email;\r\n\r\n    db.collection(\"Users\")\r\n      .where(\"email\", \"==\", email)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          var data = doc.data();\r\n          var name = data.name;\r\n          var fullName = name.split(\" \");\r\n\r\n          console.log(fullName);\r\n\r\n          this.setState({\r\n            emailId: data.email,\r\n            firstName: fullName[0],\r\n            LastName: fullName[1],\r\n            address: data.address,\r\n            contact: data.contact,\r\n            docId: doc.id,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    this.getUserData();\r\n  }\r\n  updateUserData = () => {\r\n    db.collection(\"Users\")\r\n      .doc(this.state.docId)\r\n      .update({\r\n        name: this.state.firstName + \" \" + this.state.LastName,\r\n        contact: this.state.contact,\r\n        address: this.state.address,\r\n      });\r\n\r\n    alert('User Details Updated SuccessFully')\r\n  };\r\n  render() {\r\n    return (\r\n      <View>\r\n        <MyHeader title=\"Settings\" navigation={this.props.navigation}/>\r\n        <KeyboardAvoidingView style={styles.KeyboardAvoidingView}>\r\n          <Text\r\n            style={{\r\n              alignSelf: \"center\",\r\n              fontSize: 20,\r\n              fontWeight: \"bold\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            User Info\r\n          </Text>\r\n          <TextInput\r\n            style={styles.formTextInput}\r\n            placeholder={\"First Name\"}\r\n            label={\"First Name\"}\r\n            maxLength={8}\r\n            onChangeText={(text) => {\r\n              this.setState({\r\n                firstName: text,\r\n              });\r\n            }}\r\n            value={this.state.firstName}\r\n          />\r\n          <TextInput\r\n            style={styles.formTextInput}\r\n            placeholder={\"Last Name\"}\r\n            label={\"Last Name\"}\r\n            maxLength={8}\r\n            onChangeText={(text) => {\r\n              this.setState({\r\n                LastName: text,\r\n              });\r\n            }}\r\n            value={this.state.LastName}\r\n          />\r\n          <TextInput\r\n            style={styles.formTextInput}\r\n            placeholder={\"Contact\"}\r\n            label={\"Contact\"}\r\n            maxLength={10}\r\n            keyboardType={\"numeric\"}\r\n            onChangeText={(text) => {\r\n              this.setState({\r\n                contact: text,\r\n              });\r\n            }}\r\n            value={this.state.contact}\r\n          />\r\n          <TextInput\r\n            style={styles.formTextInput}\r\n            placeholder={\"Address\"}\r\n            label={\"Address\"}\r\n            multiline={true}\r\n            onChangeText={(text) => {\r\n              this.setState({\r\n                address: text,\r\n              });\r\n            }}\r\n            value={this.state.address}\r\n          />\r\n          <View>\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={() => this.updateUserData()}\r\n            >\r\n              <Text style={styles.buttonText}>Submit</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  formTextInput: {\r\n    width: \"75%\",\r\n    height: RFValue(35),\r\n    alignSelf: \"center\",\r\n    borderColor: \"#ffab91\",\r\n    borderRadius: 10,\r\n    borderWidth: 4.5,\r\n    marginTop: RFValue(20),\r\n    padding: RFValue(10),\r\n  },\r\n  button: {\r\n    width: \"50%\",\r\n    height: RFValue(50),\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"#ff5722\",\r\n    marginTop: RFValue(20),\r\n    marginLeft: \"25%\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}