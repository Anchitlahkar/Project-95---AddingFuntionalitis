{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\health-app\\\\health-app\\\\screens\\\\TestPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header, Icon } from \"react-native-elements\";\nimport CheckBoxScreen from \"../components/CheckBox\";\n\nvar TestScreen = function (_React$Component) {\n  _inherits(TestScreen, _React$Component);\n\n  var _super = _createSuper(TestScreen);\n\n  function TestScreen() {\n    var _this;\n\n    _classCallCheck(this, TestScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      questionNo: 1\n    };\n    return _this;\n  }\n\n  _createClass(TestScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        leftComponent: React.createElement(Icon, {\n          name: \"arrow-left\",\n          type: \"feather\",\n          color: \"white\",\n          onPress: function onPress() {\n            _this2.props.navigation.navigate(\"Drawer\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }\n        }),\n        centerComponent: {\n          text: \"Test\",\n          style: {\n            color: \"yellow\",\n            fontSize: 20,\n            fontWeight: \"bold\"\n          }\n        },\n        backgroundColor: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(CheckBoxScreen, {\n        question: \"When i'm around people, I still struggle feeling alone\",\n        answere1: \"All The Time\",\n        answere2: \"Sometimes\",\n        answere3: \"Not Really, no\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          var questionNo = _this2.state.questionNo;\n\n          _this2.setState({\n            questionNo: questionNo + 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\",\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return TestScreen;\n}(React.Component);\n\nexport { TestScreen as default };\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"white\",\n    width: 200,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 5,\n    borderWidth: 5,\n    marginTleft: 5\n  }\n});","map":{"version":3,"sources":["D:/Apps/health-app/health-app/screens/TestPage.js"],"names":["React","Header","Icon","CheckBoxScreen","TestScreen","state","questionNo","props","navigation","navigate","text","style","color","fontSize","fontWeight","styles","button","setState","marginTop","Component","StyleSheet","create","backgroundColor","width","height","alignItems","justifyContent","borderRadius","borderWidth","marginTleft"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,uBAA7B;AACA,OAAOC,cAAP;;IAEqBC,U;;;;;AACnB,wBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAFY;AAKb;;;;WACD,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,aAAa,EACX,oBAAC,IAAD;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,IAAI,EAAC,SAFP;AAGE,UAAA,KAAK,EAAC,OAHR;AAIE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAWE,QAAA,eAAe,EAAE;AACfC,UAAAA,IAAI,EAAE,MADS;AAEfC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,QAAT;AAAmBC,YAAAA,QAAQ,EAAE,EAA7B;AAAiCC,YAAAA,UAAU,EAAE;AAA7C;AAFQ,SAXnB;AAeE,QAAA,eAAe,EAAC,OAflB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAkBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACA,QAAA,QAAQ,EAAC,wDADT;AAEA,QAAA,QAAQ,EAAC,cAFT;AAGA,QAAA,QAAQ,EAAC,WAHT;AAIA,QAAA,QAAQ,EAAC,gBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAlBF,EA2BE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACC,MADhB;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAMV,UAAU,GAAG,MAAI,CAACD,KAAL,CAAWC,UAA9B;;AACA,UAAA,MAAI,CAACW,QAAL,CAAc;AACZX,YAAAA,UAAU,EAAEA,UAAU,GAAG;AADb,WAAd;AAGD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE,OAAT;AAAkBE,UAAAA,UAAU,EAAE,MAA9B;AAAsCI,UAAAA,SAAS,EAAE;AAAjD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CA3BF,CADF;AA2CD;;;;EAnDqClB,KAAK,CAACmB,S;;SAAzBf,U;AAqDrB,IAAMW,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,eAAe,EAAE,OADX;AAENC,IAAAA,KAAK,EAAE,GAFD;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNC,IAAAA,cAAc,EAAE,QALV;AAMNC,IAAAA,YAAY,EAAE,EANR;AAONT,IAAAA,SAAS,EAAE,CAPL;AAQNU,IAAAA,WAAW,EAAE,CARP;AASNC,IAAAA,WAAW,EAAE;AATP;AADuB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\r\nimport { Text, View, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Header, Icon } from \"react-native-elements\";\r\nimport CheckBoxScreen from \"../components/CheckBox\";\r\n\r\nexport default class TestScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questionNo: 1,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Header\r\n          leftComponent={\r\n            <Icon\r\n              name=\"arrow-left\"\r\n              type=\"feather\"\r\n              color=\"white\"\r\n              onPress={() => {\r\n                this.props.navigation.navigate(\"Drawer\");\r\n              }}\r\n            />\r\n          }\r\n          centerComponent={{\r\n            text: \"Test\",\r\n            style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n          }}\r\n          backgroundColor=\"black\"\r\n        />\r\n        <View>\r\n            <CheckBoxScreen\r\n            question=\"When i'm around people, I still struggle feeling alone\"\r\n            answere1=\"All The Time\"\r\n            answere2=\"Sometimes\"\r\n            answere3=\"Not Really, no\"\r\n          />\r\n        </View>\r\n\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={() => {\r\n            const questionNo = this.state.questionNo;\r\n            this.setState({\r\n              questionNo: questionNo + 1,\r\n            });\r\n          }}\r\n        >\r\n          <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n            Submit\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    backgroundColor: \"white\",\r\n    width: 200,\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 10,\r\n    marginTop: 5,\r\n    borderWidth: 5,\r\n    marginTleft: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}