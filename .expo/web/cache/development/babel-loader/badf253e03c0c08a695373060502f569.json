{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\health-app\\\\health-app\\\\components\\\\CustomSideBarMenu.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { DrawerItems } from \"react-navigation-drawer\";\nimport firebase from \"firebase\";\nimport { Avatar } from \"react-native-elements\";\nimport db from \"../config\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nvar CustomSideBarMenu = function (_React$Component) {\n  _inherits(CustomSideBarMenu, _React$Component);\n\n  var _super = _createSuper(CustomSideBarMenu);\n\n  function CustomSideBarMenu() {\n    var _this;\n\n    _classCallCheck(this, CustomSideBarMenu);\n\n    _this = _super.call(this);\n\n    _this.getUserProfile = function () {\n      db.collection(\"Users\").where(\"email\", \"==\", _this.state.userId).onSnapshot(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this.setState({\n            name: doc.data().name\n          });\n        });\n      });\n    };\n\n    _this.fetchImage = function (imageName) {\n      var storageRef = firebase.storage().ref().child(\"user_profiles/\" + imageName);\n      storageRef.getDownloadURL().then(function (url) {\n        _this.setState({\n          image: url\n        });\n      }).catch(function (error) {\n        _this.setState({\n          image: \"#\"\n        });\n      });\n    };\n\n    _this.uploadImage = function _callee(uri, imageName) {\n      var response, blob, ref;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(uri));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 5:\n              blob = _context.sent;\n              ref = firebase.storage().ref().child(\"user_profiles/\" + imageName);\n              return _context.abrupt(\"return\", ref.put(blob).then(function (response) {\n                _this.fetchImage(imageName);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.selectPicture = function _callee2() {\n      var _await$ImagePicker$la, cancelled, uri;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 2:\n              _await$ImagePicker$la = _context2.sent;\n              cancelled = _await$ImagePicker$la.cancelled;\n              uri = _await$ImagePicker$la.uri;\n\n              if (!cancelled) {\n                _this.setState({\n                  image: uri\n                });\n\n                _this.uploadImage(uri, _this.state.userId);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      image: \"#\",\n      name: \"\",\n      userId: firebase.auth().currentUser.email\n    };\n    return _this;\n  }\n\n  _createClass(CustomSideBarMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserProfile();\n      this.fetchImage(this.state.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.5,\n          alignItems: \"center\",\n          backgroundColor: \"lightblue\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(Avatar, {\n        rounded: true,\n        source: {\n          uri: this.state.image\n        },\n        size: 200,\n        onPress: function onPress() {\n          _this2.selectPicture();\n        },\n        showEditButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 20,\n          paddingTop: 10,\n          color: \"white\",\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, this.state.name)), React.createElement(View, {\n        style: styles.drawerItemsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, React.createElement(DrawerItems, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }))), React.createElement(View, {\n        styles: styles.logOutContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.logOutButton,\n        onPress: function onPress() {\n          _this2.props.navigation.navigate(\"HomeScreen\");\n\n          firebase.auth().signOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.logOutText, {\n          marginTop: -20\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, \"Logout\"))));\n    }\n  }]);\n\n  return CustomSideBarMenu;\n}(React.Component);\n\nexport { CustomSideBarMenu as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  drawerItemsContainer: {\n    flex: 0.8\n  },\n  logOutContainer: {\n    flex: 0.2,\n    justifyContent: \"flex-end\",\n    paddingBottom: 30\n  },\n  logOutButton: {\n    height: 30,\n    width: \"100%\",\n    justifyContent: \"center\",\n    padding: 10\n  },\n  logOutText: {\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  imageContainer: {\n    flex: 0.75,\n    width: 230,\n    height: 250,\n    marginLeft: 20,\n    marginTop: 30,\n    borderRadius: 40\n  }\n});","map":{"version":3,"sources":["D:/Apps/health-app/health-app/components/CustomSideBarMenu.js"],"names":["React","TouchableOpacity","DrawerItems","firebase","Avatar","db","ImagePicker","CustomSideBarMenu","getUserProfile","collection","where","state","userId","onSnapshot","snapshot","forEach","doc","setState","name","data","fetchImage","imageName","storageRef","storage","ref","child","getDownloadURL","then","url","image","catch","error","uploadImage","uri","fetch","response","blob","put","selectPicture","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","cancelled","auth","currentUser","email","styles","container","flex","alignItems","backgroundColor","fontWeight","fontSize","paddingTop","color","paddingLeft","drawerItemsContainer","props","logOutContainer","logOutButton","navigation","navigate","signOut","logOutText","marginTop","Component","StyleSheet","create","justifyContent","paddingBottom","height","width","padding","imageContainer","marginLeft","borderRadius"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Text, View, StyleSheet, Image } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { DrawerItems } from \"react-navigation-drawer\";\r\nimport firebase from \"firebase\";\r\nimport { Avatar } from \"react-native-elements\";\r\nimport db from \"../config\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport default class CustomSideBarMenu extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      image: \"#\",\r\n      name: \"\",\r\n      userId: firebase.auth().currentUser.email,\r\n    };\r\n  }\r\n\r\n  getUserProfile = () => {\r\n    db.collection(\"Users\")\r\n      .where(\"email\", \"==\", this.state.userId)\r\n      .onSnapshot((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          this.setState({\r\n            name: doc.data().name,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  fetchImage = (imageName) => {\r\n    var storageRef = firebase\r\n      .storage()\r\n      .ref()\r\n      .child(\"user_profiles/\" + imageName);\r\n    storageRef\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        this.setState({\r\n          image: url,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          image: \"#\",\r\n        });\r\n      });\r\n  };\r\n\r\n  uploadImage = async (uri, imageName) => {\r\n    var response = await fetch(uri);\r\n    var blob = await response.blob();\r\n    var ref = firebase\r\n      .storage()\r\n      .ref()\r\n      .child(\"user_profiles/\" + imageName);\r\n\r\n    return ref.put(blob).then((response) => {\r\n      this.fetchImage(imageName);\r\n    });\r\n  };\r\n\r\n  selectPicture = async () => {\r\n    const { cancelled, uri } = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n    if (!cancelled) {\r\n      this.setState({\r\n        image: uri,\r\n      });\r\n      this.uploadImage(uri, this.state.userId);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserProfile();\r\n    this.fetchImage(this.state.userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View\r\n          style={{ flex: 0.5, alignItems: \"center\", backgroundColor: \"lightblue\" }}\r\n        >\r\n          <Avatar\r\n            rounded\r\n            source={{\r\n              uri: this.state.image,\r\n            }}\r\n            size={200}\r\n            onPress={() => {\r\n              this.selectPicture();\r\n            }}\r\n            // containerStyle={styles.imageContainer}\r\n            showEditButton\r\n          />\r\n          <Text\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 20,\r\n              paddingTop: 10,\r\n              color: \"white\",\r\n              paddingLeft: 25,\r\n            }}\r\n          >\r\n            {this.state.name}\r\n          </Text>\r\n        </View>\r\n        <View style={styles.drawerItemsContainer}>\r\n          <DrawerItems {...this.props} />\r\n        </View>\r\n        <View styles={styles.logOutContainer}>\r\n          <TouchableOpacity\r\n            style={styles.logOutButton}\r\n            onPress={() => {\r\n              this.props.navigation.navigate(\"HomeScreen\");\r\n              firebase.auth().signOut();\r\n            }}\r\n          >\r\n            <Text style={[styles.logOutText, { marginTop: -20 }]}>Logout</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  drawerItemsContainer: {\r\n    flex: 0.8,\r\n  },\r\n  logOutContainer: {\r\n    flex: 0.2,\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: 30,\r\n  },\r\n  logOutButton: {\r\n    height: 30,\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n  },\r\n  logOutText: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n  },\r\n  imageContainer: {\r\n    flex: 0.75,\r\n    width: 230,\r\n    height: 250,\r\n    marginLeft: 20,\r\n    marginTop: 30,\r\n    borderRadius: 40,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}